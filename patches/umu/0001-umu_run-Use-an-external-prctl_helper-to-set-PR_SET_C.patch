From e386d9288caa419616d23754c4a883b14b3b3fea Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sun, 20 Oct 2024 20:13:50 -0700
Subject: [PATCH] umu_run: Use an external prctl_helper to set
 PR_SET_CHILD_SUBREAPER instead of relying on CDLL.

This allows a fully statically linked umu-launcher to still be able to make this prctl call.
---
 umu/umu_run.py | 24 ++++++++++++++----------
 1 file changed, 14 insertions(+), 10 deletions(-)

diff --git a/umu/umu_run.py b/umu/umu_run.py
index fef85b0..9b3fbdb 100755
--- a/umu/umu_run.py
+++ b/umu/umu_run.py
@@ -5,6 +5,7 @@ import sys
 import threading
 import time
 import zipfile
+import subprocess
 from _ctypes import CFuncPtr
 from argparse import ArgumentParser, Namespace, RawTextHelpFormatter
 from concurrent.futures import Future, ThreadPoolExecutor
@@ -649,6 +650,18 @@ def run_in_steammode(proc: Popen) -> int:
 
     return proc.wait()
 
+def set_child_subreaper():
+    helper_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'prctl_helper')
+    try:
+        subprocess.run([helper_path], check=True)
+        return 0
+    except subprocess.CalledProcessError as e:
+        log.exception(e)
+        return 1
+    except FileNotFoundError:
+        err: str = "prctl_helper not found, expect problems"
+        log.error(err)
+        return 1
 
 def run_command(command: tuple[Path | str, ...]) -> int:
     """Run the executable using Proton within the Steam Runtime."""
@@ -681,16 +694,7 @@ def run_command(command: tuple[Path | str, ...]) -> int:
     else:
         cwd = Path.cwd()
 
-    prctl = CDLL(libc).prctl
-    prctl.restype = c_int
-    prctl.argtypes = [
-        c_int,
-        c_ulong,
-        c_ulong,
-        c_ulong,
-        c_ulong,
-    ]
-    prctl_ret = prctl(PR_SET_CHILD_SUBREAPER, 1, 0, 0, 0, 0)
+    prctl_ret = set_child_subreaper()
     log.debug("prctl exited with status: %s", prctl_ret)
 
     with Popen(
-- 
2.47.0

