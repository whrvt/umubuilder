From 98a609ebd773867df81fa3770a642d92f3b812ce Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Mon, 2 Sep 2024 16:21:12 -0700
Subject: [PATCH 4/5] winepulse: Try memlocking the audio buffer.

But allow disabling it with WINE_PULSE_MEMLOCK=0.
---
 dlls/winepulse.drv/pulse.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/dlls/winepulse.drv/pulse.c b/dlls/winepulse.drv/pulse.c
index c46e7a786f7..d4b0708bf94 100644
--- a/dlls/winepulse.drv/pulse.c
+++ b/dlls/winepulse.drv/pulse.c
@@ -117,6 +117,7 @@ static pthread_mutex_t pulse_mutex;
 static pthread_cond_t pulse_cond = PTHREAD_COND_INITIALIZER;
 
 static ULONG_PTR zero_bits = 0;
+static BOOL allow_memlock = TRUE;
 
 static NTSTATUS pulse_not_implemented(void *args)
 {
@@ -203,6 +204,17 @@ static char *wstr_to_str(const WCHAR *wstr)
     return str;
 }
 
+static void try_memlock(struct pulse_stream *stream, SIZE_T bytes)
+{
+    if (!allow_memlock) return;
+
+    if (NtLockVirtualMemory(GetCurrentProcess(), (void **)&stream->local_buffer, &bytes, 1))
+        WARN("Couldn't memlock audio buffer.\n");
+    else
+        TRACE("Successfully memlocked audio buffer.\n");
+}
+
+
 static void wait_pa_operation_complete(pa_operation *o)
 {
     if (!o)
@@ -256,6 +268,10 @@ static NTSTATUS pulse_process_attach(void *args)
     }
 #endif
 
+    const char *memlock_env = getenv("WINE_PULSE_MEMLOCK");
+    if (memlock_env && atoi(memlock_env) == 0)
+        allow_memlock = FALSE;
+
     return STATUS_SUCCESS;
 }
 
@@ -1220,6 +1236,8 @@ static NTSTATUS pulse_create_stream(void *args)
                 if (NtAllocateVirtualMemory(GetCurrentProcess(), (void **)&stream->local_buffer,
                                             zero_bits, &stream->bufsize_bytes, MEM_COMMIT, PAGE_READWRITE))
                     hr = E_OUTOFMEMORY;
+                else
+                    try_memlock(stream, stream->bufsize_bytes);
             }
         }
         else {
@@ -1818,6 +1836,7 @@ static BOOL alloc_tmp_buffer(struct pulse_stream *stream, SIZE_T bytes)
         return FALSE;
 
     stream->tmp_buffer_bytes = bytes;
+    try_memlock(stream, bytes);
     return TRUE;
 }
 
-- 
2.46.0

