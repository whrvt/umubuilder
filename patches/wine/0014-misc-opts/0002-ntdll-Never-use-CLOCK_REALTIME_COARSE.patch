From da2a95cc4f32be0629946372aa7278e9e007903f Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sat, 28 Dec 2024 06:45:10 -0800
Subject: [PATCH 2/3] ntdll: Never use CLOCK_REALTIME_COARSE.

This is required for deterministic timekeeping, as
CLOCK_REALTIME_COARSE depends on the kernel tickrate.
Since this function is provided by the vDSO, there is no
performance degradation by using CLOCK_REALTIME instead.
---
 dlls/ntdll/unix/sync.c | 17 +----------------
 1 file changed, 1 insertion(+), 16 deletions(-)

diff --git a/dlls/ntdll/unix/sync.c b/dlls/ntdll/unix/sync.c
index fc5ea70be0e..fc7cd9eb24f 100644
--- a/dlls/ntdll/unix/sync.c
+++ b/dlls/ntdll/unix/sync.c
@@ -1745,22 +1745,7 @@ NTSTATUS WINAPI NtQuerySystemTime( LARGE_INTEGER *time )
 {
 #ifdef HAVE_CLOCK_GETTIME
     struct timespec ts;
-    static clockid_t clock_id = CLOCK_MONOTONIC; /* placeholder */
-
-    if (clock_id == CLOCK_MONOTONIC)
-    {
-#ifdef CLOCK_REALTIME_COARSE
-        struct timespec res;
-
-        /* Use CLOCK_REALTIME_COARSE if it has 1 ms or better resolution */
-        if (!clock_getres( CLOCK_REALTIME_COARSE, &res ) && res.tv_sec == 0 && res.tv_nsec <= 1000000)
-            clock_id = CLOCK_REALTIME_COARSE;
-        else
-#endif /* CLOCK_REALTIME_COARSE */
-            clock_id = CLOCK_REALTIME;
-    }
-
-    if (!clock_gettime( clock_id, &ts ))
+    if (!clock_gettime( CLOCK_REALTIME, &ts ))
     {
         time->QuadPart = ticks_from_time_t( ts.tv_sec ) + (ts.tv_nsec + 50) / 100;
     }
-- 
2.48.1

