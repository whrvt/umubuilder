diff --git a/dlls/winex11.drv/opengl.c b/dlls/winex11.drv/opengl.c
index 6748912a3fb..228fdf6b12c 100644
--- a/dlls/winex11.drv/opengl.c
+++ b/dlls/winex11.drv/opengl.c
@@ -1486,8 +1486,9 @@ static BOOL drawable_needs_clipping( HWND hwnd, BOOL known_child )
     {
         const char *sgi = getenv( "SteamGameId" );
 
-        no_child_clipping_cached = sgi && (!strcmp( sgi, "2229850" ) || !strcmp( sgi, "2229880" ));
-        if (no_child_clipping_cached) FIXME( "HACK: disabling child GL window clipping.\n" );
+        no_child_clipping_cached = gl_disable_child_window_clipping || (sgi && (!strcmp( sgi, "2229850" ) || !strcmp( sgi, "2229880" )));
+        if (no_child_clipping_cached)
+            MESSAGE( "OpenGL speedhack enabled, which will cause osu!'s editor top menu bar to render incorrectly\n\texport WINE_DISABLE_GLCHILD_HACK=1 to disable.\n" );
     }
 
     if (known_child && !no_child_clipping_cached) return TRUE;
diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -89,6 +89,7 @@ BOOL shape_layered_windows = TRUE;
 int copy_default_colors = 128;
 int alloc_system_colors = 256;
 int limit_number_of_resolutions = 0;
+BOOL gl_disable_child_window_clipping = FALSE;
 int xrender_error_base = 0;
 int xfixes_event_base = 0;
 char *process_name = NULL;
@@ -937,6 +938,12 @@ static NTSTATUS x11drv_init( void *arg )
             (e && *e != '\0' && *e != '0');
     }
 
+    {
+        const char *e = getenv("WINE_ENABLE_GLCHILD_HACK");
+        if (e && *e != '\0' && *e != '0')
+            gl_disable_child_window_clipping = TRUE;
+    }
+
     init_user_driver();
     X11DRV_DisplayDevices_Init(FALSE);
 
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -1020,6 +1020,7 @@ static inline UINT asciiz_to_unicode( WCHAR *dst, const char *src )
     while ((*p++ = *src++));
     return (p - dst) * sizeof(WCHAR);
 }
+extern BOOL gl_disable_child_window_clipping;
 
 extern BOOL layered_window_client_hack;
 

Disable layered windows as well when the hack is active to prevent a hang on shutdown.
diff --git a/dlls/win32u/window.c b/dlls/win32u/window.c
index a60cce01dbe..c3c1081a018 100644
--- a/dlls/win32u/window.c
+++ b/dlls/win32u/window.c
@@ -1249,6 +1249,19 @@ static HWND set_window_owner( HWND hwnd, HWND owner )
     return ret;
 }
 
+static BOOL disable_child_cached()
+{
+    static BOOL child_clipping_disabled;
+    static unsigned int once;
+    if (!once++)
+    {
+        const char *e = getenv("WINE_ENABLE_GLCHILD_HACK");
+        if (e && *e != '\0' && *e != '0')
+            child_clipping_disabled = TRUE;
+    }
+    return child_clipping_disabled;
+}
+
 /* Helper function for SetWindowLong(). */
 LONG_PTR set_window_long( HWND hwnd, INT offset, UINT size, LONG_PTR newval, BOOL ansi )
 {
@@ -1312,6 +1325,7 @@ LONG_PTR set_window_long( HWND hwnd, INT offset, UINT size, LONG_PTR newval, BOO
         if (sgi && !strcmp( sgi, "694280" )) newval &= ~WS_EX_LAYERED;
         if (sgi && !strcmp( sgi, "312670" )) newval &= ~WS_EX_LAYERED;
         if (sgi && !strcmp( sgi, "700600" )) newval &= ~WS_EX_LAYERED;
+        if (disable_child_cached()) newval &= ~WS_EX_LAYERED;
         style.styleOld = win->dwExStyle;
         style.styleNew = newval;
         release_win_ptr( win );
